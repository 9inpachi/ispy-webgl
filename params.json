{
  "name": "iSpy WebGL",
  "tagline": "Browser-based event display for the CMS experiment at the LHC, using WebGL.",
  "body": "<h1>What is this?</h1>\r\niSpy WebGL is an event display used for the CMS experiment at the LHC using WebGL (via <a href=\"http://threejs.org\">three.js</a>) It reads in an ig file which contains event and geometry information.\r\n\r\n![Example display](https://cds.cern.ch/record/2139792/files/diphoton1_v2.png?subformat=icon-1440)\r\n\r\n<h1>What is an ig file?</h1>\r\nA .ig file is a zip archive (unzippable via unzip or similar) containing one file per event. Each event file uses a relational database-like structure, described using JSON.\r\n\r\n<h2>ig-file format:</h2>\r\nig files have a flat directory structure with a separate directory per run (run directory). Each run directory contains one or more files describing a given event (ig event file) each. The associated run number and the event number are, respectively, the file name for the run directory and for the ig event file.\r\n\r\nThe ig-event-file format is a valid JSON or python dictionary. The format defines three categories of objects: types, collections and associations-sets.\r\n\r\nSyntax:\r\n\r\nig-event-file ::= { 'Types': type-descriptions, 'Collections': collections, 'Associations': association-sets }\r\n\r\n<h3>Types</h3>\r\nTypes are a mapping of a type-name and its associated type-description. The type-description defines the types of the objects that are to be found in the Collection which uses the same string as the type-name to be identified. The attributes (i.e. columns) of a Collection are defined by an attribute name and an attribute type. The former is just a string label, while the second one define the kind of object which is stored in the attribute, all of which have a C++ equivalent. Possible attribute types include:\r\n\r\n<ul>\r\n<li>simple numeric types: <em>int</em>, <em>long</em>, and <em>double</em>, which map to their C++ equivalents.</li>\r\n<li>text-like elements: <em>string</em>, which map to <code>std::string</code></li>\r\n<li>vector like quantities: <em>v2d</em>, <em>v3d</em>, <em>v4d</em> which map to <code>IgV2d</code>, <code>IgV3d</code>, <code>IgV4d</code>.</li>\r\n</ul>\r\n\r\nSyntax:\r\n\r\ntype-descriptions ::= { type-description, ... }\r\n\r\ntype-description ::= \"type-name\": [attributes-description, ...]\r\n\r\ntype-name ::= string-literal\r\n\r\nattribute-description ::= [\"attribute-name\", \"attribute-type\"]\r\n\r\nattribute-name ::= string-literal\r\n\r\nstring-literal ::= [A-Za-z_][A-Za-z_/0-9]*\r\n\r\nattribute-type ::= int OR long OR double OR string OR v2d OR v3d OR v4d\r\n\r\n<h3>Collections</h3>\r\n\r\nCollections are arrays of rows, identified by a collection-name. The collection-name is a string-literal which matches one of the type-names defined in types. Rows are arrays of values, where the type of the value matches the attribute-type of the attribute-description with the same position in the type-description which has its type-name matching the collection name.\r\n\r\nThis is the actual data contained in a file.\r\n\r\nSyntax:\r\n\r\ncollections ::= {collection, ... }\r\n\r\ncollection ::= \"type-name\": [row, ...]\r\n\r\nrow ::= [ value, ...]\r\n\r\nvalue ::= string-literal OR numeric-literal OR vector-literal\r\n\r\nnumeric-literal ::= [0-9]+[.]*[0-9]*\r\n\r\nvector-literal ::= [numeric-literal, numeric-literal, ...]\r\n\r\n<h3>Association sets</h3>\r\n\r\nAn association defines a relationship between two rows found in any (possibly the same) collections. They are uniquely identified by two couples of numbers, the first one uniquely identifying the left object of the association, the other identifying the right object. The first element of this couple of numbers is the so called collection id while the second one is called object id. The collection id is the index of the collection type within the Types table, while the object id is the index of the object within the collection. Such a couple of numbers is called object reference. An association-set is an array of associations which share some common meaning decided by the writer of the ig-file.\r\n\r\nSyntax:\r\n\r\nassociations-sets ::= { association-set, ... }\r\n\r\nassociation-set ::= \"association-set-name\": [association, ...]\r\n\r\nassociation ::= [left-object, right-object]\r\n\r\nleft-object ::= object-reference\r\n\r\nright-object ::= object-reference\r\n\r\nobject-reference ::= [collection-id, object-id]\r\n\r\ncollection-id ::= index-literal\r\n\r\nobject-id ::= index-literal\r\n\r\nindex-literal ::= [0-9]+\r\n\r\n<h3>Example</h3>\r\n\r\nHere is a simple example of what an ig file looks like.\r\n```\r\n{\r\n \"Types\": {\"Tracks_V1\": [[\"x\", \"double\"],[\"y\", \"double\"],[\"z\", \"double\"],\r\n                         [\"px\", \"double\"],[\"py\",\"double\"],[\"pz\", \"double\"]],\r\n           \"Clusters_V1\": [[\"x\", \"double\"],[\"y\", \"double\"],[\"z\", \"double\"],\r\n                           [\"e\", \"double\"]]\r\n          },\r\n \"Collections\": {\"Tracks_V1\": [[0, 0, 0, 0, 0, 0],\r\n                               [1, 1, 1, 1, 1, 1],\r\n                               [2, 2, 2, 2, 2, 2],\r\n                               [3, 3, 3, 3, 3, 3],\r\n                               [4, 4, 4, 4, 4, 4],\r\n                               [5, 5, 5, 5, 5, 5],\r\n                               [6, 6, 6, 6, 6, 6],\r\n                               [7, 7, 7, 7, 7, 7],\r\n                               [8, 8, 8, 8, 8, 8],\r\n                               [9, 9, 9, 9, 9, 9]],\r\n                 \"Clusters_V1\": [[0, 0, 0, 0],\r\n                                 [1, 1, 1, 1],\r\n                                 [2, 2, 2, 2],\r\n                                 [3, 3, 3, 3],\r\n                                 [4, 4, 4, 4],\r\n                                 [5, 5, 5, 5],\r\n                                 [6, 6, 6, 6],\r\n                                 [7, 7, 7, 7],\r\n                                 [8, 8, 8, 8],\r\n                                 [9, 9, 9, 9]]\r\n                 },\r\n \"Associations\": {\"TrackClusters_V1\": [[[0, 0], [1, 0]],\r\n                                       [[0, 1], [1, 1]],\r\n                                       [[0, 2], [1, 2]],\r\n                                       [[0, 3], [1, 3]],\r\n                                       [[0, 4], [1, 4]],\r\n                                       [[0, 5], [1, 5]],\r\n                                       [[0, 6], [1, 6]],\r\n                                       [[0, 7], [1, 7]],\r\n                                       [[0, 8], [1, 8]],\r\n                                       [[0, 9], [1, 9]]],\r\n                  \"TrackClusters2_V1\": [[[0, 0], [1, 0]],\r\n                                        [[0, 1], [1, 0]],\r\n                                        [[0, 2], [1, 0]],\r\n                                        [[0, 3], [1, 0]],\r\n                                        [[0, 4], [1, 0]],\r\n                                        [[0, 5], [1, 0]],\r\n                                        [[0, 6], [1, 0]],\r\n                                        [[0, 7], [1, 0]],\r\n                                        [[0, 8], [1, 0]],\r\n                                        [[0, 9], [1, 0]]]\r\n                  }\r\n}\r\n```\r\n<h3>APIs</h3>\r\nAPIs for ig files can be found on github:\r\n<ul>\r\n<li><a href=\"https://github.com/tpmccauley/igfiles\">C++</a>\r\n<li><a href=\"https://github.com/tpmccauley/pyig\">python</a>\r\n</ul>\r\n\r\n<h1>How do I make my own ig files?</h1>\r\nSee an example <a href=\"https://github.com/cms-outreach/ispy-analyzers/blob/Run2010B/README.md\">here.</a>\r\n\r\n<h1>Contributors:</h1>\r\n<h2>iSpy WebGL</h2>\r\nL. Barnard, M. Hategan, C. Logren, P. Nguyen, T. McCauley, M. Saunby\r\n<h2>iSpy</h2>\r\nThanks to all contributors to the old <a href=\"https://github.com/cms-outreach/ispy\">iSpy</a> desktop application: G. Alverson, G. Eulisse, S. Muzaffar, I. Osborne, L. Taylor, L. Tuura. \r\n \r\n<h1>Contact</h1>\r\n<a href=\"mailto:ispy-developers@cern.ch\">ispy-developers@cern.ch</a>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}